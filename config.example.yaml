log:
  level: error # available [debug, info, warning, error, fatal, silent]

server:
  # web server, serve ui itself if no standalone web server
  web:
    # root path of the web ui dir
    # (required if you enabled http(s))
    # leave it `bundled` to use bundled web app
    # or provide with web app dir path
    # such as: 
    # root: /path/to/web/ui
    root: bundled
    # http server
    http:
      enabled: true
      listen: 0.0.0.0:8080
    # https server
    https:
      enabled: false
      listen: :8443
      tls_cert: /path/to/tls_cert.pem # required if enabled
      tls_key: /path/to/tls_key.pem   # required if enabled

  # Authentication for service API
  auth:
    enabled: true
    secret_key: this_is_a_secret  # string key for jwt signing
    session_timeout: 10h          # time to reAuth by [d(ay) h(our) m(inute) s(econd)]
    # web ui users
    users:
    - username: admin
      password: admin
      # define service names
      # options are [all, file, shell, configure]
      # use `all` if you would like to access to all service
      services:
      - all                       # access to all services
    - username: example_user
      password: example_password
      services:
      - configure                 # assess to configure service
      - shell                     # assess to web shell

# services
service:
  # file upload and download service (via http)
  file:
    upload_enabled: true
    download_enabled: true
    default_path: /default/upload/dir # absolute path (required if enabled)
  # shell execution
  shell:
    enabled: true       # enable web shell service
    default_shell: sh   # default shell to use
  # device metrics monitoring
  monitoring:
    enabled: true
  # power management
  power:
    reboot_enabled: true
    shutdown_enabled: true
  # configure service
  configure:
    # enable configure service or not
    enabled: true
    # shell used to execute helper_script
    shell: sh
    # LoRaWAN configure service
    lora:
      # enable lora configure service or not
      enabled: true
      devs:
      - name: Gateway
        enabled: true
        # device type [brocaar/lora-gateway-bridge, pkt_forwarder]
        type: brocaar/lora-gateway-bridge
        # path to lora gateway forward config file
        conf_file: /path/to/lora_gw.toml
        # config file format [text, json, ucl, toml, yaml]
        conf_fmt: toml
        # helper script to provide device management
        # including [start, stop, restart, status]
        helper_script: /path/to/lora-gw-helper.sh
      - name: SX1301
        enabled: true
        # device type [brocaar/lora-gateway-bridge, pkt_forwarder]
        type: pkt_forwarder
        # path to lora pkt forward config file
        conf_file: /path/to/lora_pf.json
        # config file format [text, json, ucl, toml, yaml]
        conf_fmt: json
        # helper script to provide device management
        # including [start, stop, restart, status]
        helper_script: /path/to/lora-pf-helper.sh
    # network configure service
    network:
      # enable network configure service or not
      enabled: true
      interfaces:
        enabled: true
        devs:
        - name: eth_0
          enabled: true
          # config file format [text, json, ucl, toml, yaml]
          conf_fmt: ucl
          # path to custom eth_0 config file
          conf_file: /path/to/net_ifcae.conf
          # helper script to provide device management
          # including [start, stop, restart, status]
          helper_script: /path/to/ifcae-helper.sh
      wifi:
        # enable wifi configure service or not
        enabled: true
        devs:
        - name: WLAN_0
          enabled: true
          # path to wpa_supplicant.conf
          conf_file: /path/to/net_wifi_wpa_supplicant.conf
          # config file format [text, json, ucl, toml, yaml]
          conf_fmt: ucl
          # helper script to provide device management
          # including [start, stop, restart, status]
          helper_script: /path/to/wifi-helper.sh
      cellular:
        # enable cellular configure service or not
        enabled: true
        devs:
        - name: CELL_0
          enabled: true
          # config file format [text, json, ucl, toml, yaml]
          conf_fmt: text
          # path to custom cellular config file
          conf_file: /path/to/net_cell.conf
          # helper script to provide device management
          # including [start, stop, restart, status]
          helper_script: /path/to/cell-helper.sh
    # bus configuration
    bus:
      # enable bus configure service or not
      enabled: true
      devs:
      - name: rs485_0
        enabled: true
        # path to custom rs485 config file
        conf_file: /path/to/bus_conf.conf
        # config file format [text, json, ucl, toml, yaml]
        conf_fmt: text
        # helper script to provide device management
        # including [start, stop, restart, status]
        helper_script: /path/to/bus-helper.sh
    # peripheral configuration
    periph:
      # enable bus configure service or not
      enabled: true
      devs:
      - name: GPIO_0
        enabled: true
        # path to custom gpio config file
        conf_file: /path/to/periph_conf.conf
        # config file format [text, json, ucl, toml, yaml]
        conf_fmt: text
        # helper script to provide device management
        # including [start, stop, restart, status]
        helper_script: /path/to/periph-helper.sh